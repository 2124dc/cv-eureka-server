name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SSH_HOST: "103.168.18.176"
      SSH_USER: "root"
      REMOTE_DIR: "/system/projects/java/chavdar_vishranti/jars/eureka-server"
      SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
    - uses: actions/checkout@v4
    - name: Checkout code
      run: echo "Code checkout completed successfully."

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Confirm JDK Setup
      run: echo "JDK 21 setup completed successfully."

    - name: Build with Maven and Extract JAR Name
      id: build
      run: |
        mvn -B package --file pom.xml
        JAR_NAME=$(ls target/*.jar | xargs -n 1 basename)
        echo "JAR_NAME=$JAR_NAME" >> $GITHUB_ENV
        echo "Maven build completed successfully and JAR_NAME is $JAR_NAME."

    - name: Generate Git Build Info File
      run: |
        echo "Commit Hash: $(git rev-parse HEAD)" > build_info.txt
        echo "Branch: $(git rev-parse --abbrev-ref HEAD)" >> build_info.txt
        echo "Git Tag: $(git describe --tags --abbrev=0 2>/dev/null)" >> build_info.txt
        echo "Built By: ${{ github.actor }}" >> build_info.txt
        echo "Build Number: ${{ github.run_number }}" >> build_info.txt
        echo "Build Date: $(date)" >> build_info.txt
        echo "Project Version: $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> build_info.txt
        echo "Generated build_info.txt with Git details."

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add SSH key to known_hosts
      run: ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts

    - name: Copy JAR and Build Info to VPS
      run: |
        scp target/${{ env.JAR_NAME }} $SSH_USER@$SSH_HOST:$REMOTE_DIR/
        scp build_info.txt $SSH_USER@$SSH_HOST:$REMOTE_DIR/
        echo "JAR and build_info.txt copied to VPS successfully."

    - name: Stop existing service on VPS
      run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "/system/projects/java/chavdar_vishranti/scripts/stop_service.sh eureka-server-0.0.1-SNAPSHOT.jar" || true

    - name: Start new service on VPS
      run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "nohup java -jar $REMOTE_DIR/${{ env.JAR_NAME }} > $REMOTE_DIR/eureka-server.log 2>&1 &"

    - name: Confirm Service Start
      run: echo "New service started successfully on VPS."
